% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/main.R
\name{rlowdb}
\alias{rlowdb}
\title{rlowdb: A Simple JSON-Based Database in R}
\description{
rlowdb: A Simple JSON-Based Database in R

rlowdb: A Simple JSON-Based Database in R
}
\details{
The `rlowdb` class provides a lightweight, JSON-based database solution
for storing and managing structured data in R.
It supports CRUD operations (Create, Read, Update, Delete)
and enables querying with custom functions.
}
\examples{

## ------------------------------------------------
## Method `rlowdb$new`
## ------------------------------------------------

db <- rlowdb$new("database.json")

## ------------------------------------------------
## Method `rlowdb$get_data`
## ------------------------------------------------

db$get_data()

## ------------------------------------------------
## Method `rlowdb$insert`
## ------------------------------------------------

db$insert("users", list(id = 1, name = "Alice"))

## ------------------------------------------------
## Method `rlowdb$find`
## ------------------------------------------------

db$find("users", "id", 1)

## ------------------------------------------------
## Method `rlowdb$update`
## ------------------------------------------------

db$update("users", "id", 1, list(name = "Alice Updated"))

## ------------------------------------------------
## Method `rlowdb$delete`
## ------------------------------------------------

db$delete("users", "id", 1)

## ------------------------------------------------
## Method `rlowdb$query`
## ------------------------------------------------

db <- rlowdb$new("db.json")
db$insert("posts", list(id = 1, title = "LowDB in R", views = 100))
db$insert("posts", list(id = 2, title = "Data Management", views = 250))
db$insert("posts", list(id = 3, title = "Advanced R", views = 300))

# Query posts with views > 200 AND id > 2
db$query("posts", "views > 200 & id > 2")

# Query posts with views > 100 OR id == 1
db$query("posts", "views > 100 | id == 1")

# Query all posts (no condition)
db$query("posts", "")
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-rlowdb-new}{\code{rlowdb$new()}}
\item \href{#method-rlowdb-get_data}{\code{rlowdb$get_data()}}
\item \href{#method-rlowdb-insert}{\code{rlowdb$insert()}}
\item \href{#method-rlowdb-find}{\code{rlowdb$find()}}
\item \href{#method-rlowdb-update}{\code{rlowdb$update()}}
\item \href{#method-rlowdb-delete}{\code{rlowdb$delete()}}
\item \href{#method-rlowdb-query}{\code{rlowdb$query()}}
\item \href{#method-rlowdb-clone}{\code{rlowdb$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-rlowdb-new"></a>}}
\if{latex}{\out{\hypertarget{method-rlowdb-new}{}}}
\subsection{Method \code{new()}}{
Initialize the database, loading data from a JSON file.
If the file does not exist, an empty database is created.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{rlowdb$new(file_path)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{file_path}}{The path to the JSON file that stores the database.}
}
\if{html}{\out{</div>}}
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{db <- rlowdb$new("database.json")
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-rlowdb-get_data"></a>}}
\if{latex}{\out{\hypertarget{method-rlowdb-get_data}{}}}
\subsection{Method \code{get_data()}}{
Retrieve all stored data.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{rlowdb$get_data()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list containing all database records.
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{db$get_data()
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-rlowdb-insert"></a>}}
\if{latex}{\out{\hypertarget{method-rlowdb-insert}{}}}
\subsection{Method \code{insert()}}{
Insert a new record into a specified collection.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{rlowdb$insert(collection, record)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{collection}}{The collection name (a string).}

\item{\code{record}}{A named list representing the record to insert.}
}
\if{html}{\out{</div>}}
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{db$insert("users", list(id = 1, name = "Alice"))
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-rlowdb-find"></a>}}
\if{latex}{\out{\hypertarget{method-rlowdb-find}{}}}
\subsection{Method \code{find()}}{
Find records in a collection that match a given key-value pair.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{rlowdb$find(collection, key, value)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{collection}}{The collection name (a string).}

\item{\code{key}}{The field name to search for.}

\item{\code{value}}{The value to match.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A list of matching records. Returns an empty list if no match is found.
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{db$find("users", "id", 1)
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-rlowdb-update"></a>}}
\if{latex}{\out{\hypertarget{method-rlowdb-update}{}}}
\subsection{Method \code{update()}}{
Update existing records in a collection.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{rlowdb$update(collection, key, value, new_data)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{collection}}{The collection name.}

\item{\code{key}}{The field name to search for.}

\item{\code{value}}{The value to match.}

\item{\code{new_data}}{A named list containing the updated data.}
}
\if{html}{\out{</div>}}
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{db$update("users", "id", 1, list(name = "Alice Updated"))
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-rlowdb-delete"></a>}}
\if{latex}{\out{\hypertarget{method-rlowdb-delete}{}}}
\subsection{Method \code{delete()}}{
Delete records from a collection that match a given key-value pair.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{rlowdb$delete(collection, key, value)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{collection}}{The collection name.}

\item{\code{key}}{The field name to search for.}

\item{\code{value}}{The value to match.}
}
\if{html}{\out{</div>}}
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{db$delete("users", "id", 1)
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-rlowdb-query"></a>}}
\if{latex}{\out{\hypertarget{method-rlowdb-query}{}}}
\subsection{Method \code{query()}}{
Query a collection using a condition string.

This function allows filtering records from a collection using a condition
string that is evaluated dynamically. The condition supports multiple logical
expressions using standard R operators (e.g., `>`, `<`, `==`, `&`, `|`).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{rlowdb$query(collection, condition = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{collection}}{The collection name (a string).}

\item{\code{condition}}{A string representing a logical condition for filtering records.
- Supports comparisons (`>`, `<`, `>=`, `<=`, `==`, `!=`).
- Allows logical operators (`&` for AND, `|` for OR).
- Example: `"views > 200 & id > 2"`.
- If `NULL` or an empty string (`""`), returns all records.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A list of records that satisfy the condition. If no records match, returns an empty list.
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{db <- rlowdb$new("db.json")
db$insert("posts", list(id = 1, title = "LowDB in R", views = 100))
db$insert("posts", list(id = 2, title = "Data Management", views = 250))
db$insert("posts", list(id = 3, title = "Advanced R", views = 300))

# Query posts with views > 200 AND id > 2
db$query("posts", "views > 200 & id > 2")

# Query posts with views > 100 OR id == 1
db$query("posts", "views > 100 | id == 1")

# Query all posts (no condition)
db$query("posts", "")
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-rlowdb-clone"></a>}}
\if{latex}{\out{\hypertarget{method-rlowdb-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{rlowdb$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
